# Copyright 2023 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

include "backend.conf"

# This is the main configuration file for the application.
# ~~~~~

appName = payments-processor

# Default http client
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.HttpClientV2Module"
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.AuthModule"

# Json error handler
play.http.errorHandler = "uk.gov.hmrc.play.bootstrap.backend.http.JsonErrorHandler"

play.filters.enabled += "play.filters.cors.CORSFilter"
play.filters.cors {
  allowedOrigins = ["http://localhost:9680"]
}

# Play Modules
# ~~~~
# Additional play modules can be added here
play.modules.enabled += "uk.gov.hmrc.mongo.play.PlayMongoModule"

# Session configuration
# ~~~~~
application.session.httpOnly = false
application.session.secure = false

# The application languages
# ~~~~~
play.i18n.langs = ["en"]

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# !!!WARNING!!! DO NOT CHANGE THIS ROUTER
play.http.router = prod.Routes


# Evolutions
# ~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled

# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/), by providing a logger.xml file in the conf directory .

# Root logger:
logger.root = ERROR

# Logger used by the framework:
logger.play = INFO

# Logger provided to your application:
logger.application = DEBUG

# Microservice specific pp.config

mongodb {
  uri = "mongodb://localhost:27017/payments-processor"
}


microservice {

  services {
    auth {
      host = localhost
      port = 8500
    }
    des {
      host = localhost
      port = 9975
      authorizationToken = secret
      environment = test
      chargeref-url = /cross-regime/payments/card/notification
    }
    tps-payments-backend {
      host = localhost
      port = 9125
     }
    bc-passengers-declarations {
      host = localhost
      port = 9126
    }
    merchandise-in-baggage {
      host = localhost
      port = 9975
    }

  }

}

#charge ref queue config
chargeref.queue.retryAfter = 60 seconds
chargeref.queue.available.for = 24 hours
chargeref.queue.ttl = 168 hours
chargeref.queue.enabled = true
chargeref.poller.enabled = true
chargeref.poller.initialDelay = 10 seconds
chargeref.poller.interval = 7 seconds
chargeref.poller.pollLimit = 200

#pngr notification queue config
pngr.queue.retryAfter = 60 seconds
pngr.queue.available.for = 24 hours
pngr.queue.ttl = 168 hours
pngr.queue.enabled = true
pngr.poller.enabled = true
pngr.poller.initialDelay = 12 seconds
pngr.poller.interval = 7 seconds
pngr.poller.pollLimit = 200

#mods email callback queue config
mibops.queue.retryAfter = 60 seconds
mibops.queue.available.for = 24 hours
mibops.queue.ttl = 168 hours
mibops.queue.enabled = true
mibops.poller.enabled = true
mibops.poller.initialDelay = 14 seconds
mibops.poller.interval = 7 seconds
mibops.poller.pollLimit = 200

# todo look into removing this, it makes no sense and is only useful in the itTests -- OPS-11289
# - they start failing if we remove it because then notifications don't get sent in the tests, but we can't configure any other way atm.
# - alternative is to change tests from using p800 (which doesn't get sent to des) and instead use something like ppt.
sendAllToDes = false

appUrl="https://"${appName}".localhost"
